/* 
 * AmphoraApi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using AmphoraData.Client.Client;
using AmphoraData.Client.Api;
using AmphoraData.Client.Model;

namespace AmphoraData.Client.Test
{
    /// <summary>
    ///  Class for testing AmphoraeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AmphoraeApiTests : IDisposable
    {
        private AmphoraeApi instance;

        public AmphoraeApiTests()
        {
            instance = new AmphoraeApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AmphoraeApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AmphoraeApi
            //Assert.IsType(typeof(AmphoraeApi), instance, "instance is a AmphoraeApi");
        }

        
        /// <summary>
        /// Test ApiAmphoraeIdDelete
        /// </summary>
        [Fact]
        public void ApiAmphoraeIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.ApiAmphoraeIdDelete(id);
            
        }
        
        /// <summary>
        /// Test ApiAmphoraeIdFilesFileGet
        /// </summary>
        [Fact]
        public void ApiAmphoraeIdFilesFileGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string file = null;
            //instance.ApiAmphoraeIdFilesFileGet(id, file);
            
        }
        
        /// <summary>
        /// Test ApiAmphoraeIdFilesFilePut
        /// </summary>
        [Fact]
        public void ApiAmphoraeIdFilesFilePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string file = null;
            //instance.ApiAmphoraeIdFilesFilePut(id, file);
            
        }
        
        /// <summary>
        /// Test ApiAmphoraeIdFilesGet
        /// </summary>
        [Fact]
        public void ApiAmphoraeIdFilesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.ApiAmphoraeIdFilesGet(id);
            //Assert.IsType<List<string>> (response, "response is List<string>");
        }
        
        /// <summary>
        /// Test ApiAmphoraeIdGet
        /// </summary>
        [Fact]
        public void ApiAmphoraeIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.ApiAmphoraeIdGet(id);
            //Assert.IsType<AmphoraExtendedDto> (response, "response is AmphoraExtendedDto");
        }
        
        /// <summary>
        /// Test ApiAmphoraeIdPut
        /// </summary>
        [Fact]
        public void ApiAmphoraeIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //AmphoraExtendedDto amphoraExtendedDto = null;
            //var response = instance.ApiAmphoraeIdPut(id, amphoraExtendedDto);
            //Assert.IsType<AmphoraExtendedDto> (response, "response is AmphoraExtendedDto");
        }
        
        /// <summary>
        /// Test ApiAmphoraeIdSignalsGet
        /// </summary>
        [Fact]
        public void ApiAmphoraeIdSignalsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.ApiAmphoraeIdSignalsGet(id);
            //Assert.IsType<List<SignalDto>> (response, "response is List<SignalDto>");
        }
        
        /// <summary>
        /// Test ApiAmphoraeIdSignalsPost
        /// </summary>
        [Fact]
        public void ApiAmphoraeIdSignalsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //SignalDto signalDto = null;
            //var response = instance.ApiAmphoraeIdSignalsPost(id, signalDto);
            //Assert.IsType<SignalDto> (response, "response is SignalDto");
        }
        
        /// <summary>
        /// Test ApiAmphoraeIdSignalsValuesPost
        /// </summary>
        [Fact]
        public void ApiAmphoraeIdSignalsValuesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Dictionary<string, Object> requestBody = null;
            //instance.ApiAmphoraeIdSignalsValuesPost(id, requestBody);
            
        }
        
        /// <summary>
        /// Test ApiAmphoraePost
        /// </summary>
        [Fact]
        public void ApiAmphoraePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateAmphoraDto createAmphoraDto = null;
            //var response = instance.ApiAmphoraePost(createAmphoraDto);
            //Assert.IsType<AmphoraExtendedDto> (response, "response is AmphoraExtendedDto");
        }
        
    }

}
